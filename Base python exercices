a=2
b=3
a=a+1
b=a+b
#print ("1) :",a,b)

a=2
b=3
a=a*b
b=a**2
#print ("2) :",a,b)


a=0
b=1
c=b
a=c
c=a
b=c
#print ("3) :",a,b)

a=1
b=2
a=a+b
a=a*b
a=a**b
#print ("4) :",a,b)

#Exercice 5

def difference(a,b):
    c=a-b
    return (c)

def produit(a,b):
    c=a*b
    return (c)
print("la difference est de ",difference(1,3))
print("le produit est de :",produit(1,3))




#Exercice 6
def est_isocele(a,b,c):
    if (a==b)or(a==c) or (b==c):
        return True

    else :
        return False 
print(est_isocele(2,2,4))


def est_rectangle(a,b,c):
    if (a*a+b*b==c*c)or(a*a+c*c==b*b)or(b*b+c*c==a*a):
        return True
    else:
        return False
print(est_rectangle(3,4,5))


#Exercice 7

def lpp(a,b):
    if a<b:
        return a
    else:
        return b
print(lpp(2,6))

#Exercice 8

def valeur_absolue(x):
    if x<0 :
        x=x*-1
        return x
    else :
        return x
print(valeur_absolue(-5))

#Exercice 9

def est_entier(x):
    if x ==float(x):
        return True
    else :
        return False 
print(est_entier(4.4))


#Exercice 10
def est_pair(n):
    if n%2==0:
        return True
    else :
        return False
print(est_pair(4))


#Exercice 11

def intervalle1(x):
    if -2<x<3 :
        return True
    else :
        return False
print(intervalle1(1))


def intervalle2(x):
    if x<-3 or 5<x :
        return True
    else :
        return False
print(intervalle2(7))

def intervalle3(x):
    if -5<x<-3 or 0<x<2:
        return True
    else:
        return False
print(intervalle3(1))

def intervalle4(x):
    if ( x>0 and x!=1)or( x<0 and x!=-1):
        return True
    else:
        return False
print(intervalle4(-2))

def signe(x):
    if x>0:
        print("positif")
    else:
        print ("n√©gatif")
signe(4)


def est_bissextille(n):
    if (n%4==0 and n%100!=0) or n%400==0 :
        print("bissextille")
    else:
        print ("non bissextille")
est_bissextille(2000)


#BOUCLE

#Exercice 15

print("exercice14")
s=0
for i in range (10):
    s=s+i**2
    print(s)

def somme_puissance_trois(n):
    S=0
    for j in range(4,n):
        S=S+3**j
    return S
print(somme_puissance_trois(7))

#Exercice 16

def somme_carree(n,p):
    k=1
    s=0
    for i in range(k,n):
        s=s+n**p
    return s
print(somme_carree(3,5))


def mult_7(n):
    s=0
    for i in range(n):
        if n%7==0:
            s=s+1
    return s
print(mult_7(10))
    
